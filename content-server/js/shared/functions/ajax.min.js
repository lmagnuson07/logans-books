async function ajax(url,args={}){const controller=new AbortController;const signal=controller.signal;const xhrObject={timeout:2e4,textStatus:"",killProcess:false,abort:function(){console.log("From abort: ABORT");this.textStatus="abort";this.killProcess=true}};const fetchOptions={method:"GET",headers:{"Content-Type":"application/json"},body:null,mode:"cors",cache:"no-cache",credentials:"same-origin",redirect:"follow",referrerPolicy:"no-referrer",signal:signal};const defaultArgs={beforeSend:(xhrObject,settings)=>{},afterSend:(xhrObject,statusCode,statusText,status)=>{},error:(xhrObject,textStatus,error)=>{},success:(data,textStatus)=>{},complete:(xhrObject,textStatus)=>{},statusCode:{400:()=>{},401:()=>{},403:()=>{},404:()=>{},405:()=>{},408:()=>{},500:()=>{},501:()=>{},502:()=>{},504:()=>{}}};if(args.method!==undefined){fetchOptions.method=args.method}if(args.beforeSend!==undefined){defaultArgs.beforeSend=args.beforeSend}if(args.afterSend!==undefined){defaultArgs.afterSend=args.afterSend}if(args.error!==undefined){defaultArgs.error=args.error}if(args.success!==undefined){defaultArgs.success=args.success}if(args.complete!==undefined){defaultArgs.complete=args.complete}if(args.contentType!==undefined){fetchOptions.headers["Content-Type"]=args.contentType}if(args.dataType===undefined){args.dataType="JSON"}if(args.timeout!==undefined){xhrObject.timeout=args.timeout}if(xhrObject.timeout===0){xhrObject.timeout=null}if(args.extraHeaders!==undefined){fetchOptions.headers={...fetchOptions.headers,...args.extraHeaders}}if(fetchOptions.headers["Content-Type"]==="application/json"){fetchOptions.body=JSON.stringify(args.body)}else if(fetchOptions.headers["Content-Type"]==="application/x-www-form-urlencoded"){fetchOptions.body=new URLSearchParams(args.body).toString()}else{fetchOptions.headers["Content-Type"]="application/json";fetchOptions.body=JSON.stringify(args.body)}if(args.statusCode!==undefined){for(const code in defaultArgs.statusCode){if(args.statusCode[code]!==undefined&&defaultArgs.statusCode.hasOwnProperty(code)){defaultArgs.statusCode[code]=args.statusCode[code]}}}let timeoutId;if(xhrObject.timeout){timeoutId=setTimeout(()=>{xhrObject.textStatus="timed out";controller.abort()},xhrObject.timeout)}else{timeoutId=null}try{if(typeof defaultArgs.beforeSend==="function"){xhrObject.textStatus="notmodified";await defaultArgs.beforeSend(xhrObject,fetchOptions)}if(xhrObject.killProcess){return false}const response=await fetch(url,fetchOptions);const statusCode=response.status;if(defaultArgs.statusCode.hasOwnProperty(statusCode)&&typeof defaultArgs.statusCode[statusCode]==="function"){defaultArgs.statusCode[statusCode]()}if(typeof defaultArgs.afterSend==="function"){defaultArgs.afterSend(xhrObject,response.status,response.statusText,response.ok)}if(xhrObject.killProcess){return false}if(!response.ok){throw new Error(`${response.status} ${response.statusText}`)}let data;switch(args.dataType){case"JSON":data=await response.json();break;case"text":case"html":case"text/html":data=await response.text();break;case"blob":data=await response.blob();break;case"arrayBuffer":data=await response.arrayBuffer();break;case"formData":data=await response.formData();break;default:if(timeoutId)clearTimeout(timeoutId);xhrObject.abort();controller.abort();break}if(xhrObject.killProcess){throw new Error("There was an error with the request.")}if(typeof defaultArgs.success==="function"){xhrObject.textStatus="success";defaultArgs.success(data,xhrObject.textStatus)}}catch(error){if(typeof defaultArgs.error==="function"){if(xhrObject.textStatus!=="timed out"){xhrObject.textStatus="error"}defaultArgs.error(xhrObject,xhrObject.textStatus,error);if(timeoutId)clearTimeout(timeoutId);return false}}if(typeof defaultArgs.complete==="function"){xhrObject.textStatus="complete";xhrObject.killTimer=true;defaultArgs.complete(xhrObject,xhrObject.textStatus);if(xhrObject.killTimer){if(timeoutId)clearTimeout(timeoutId)}}return xhrObject}export{ajax};