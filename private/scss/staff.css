@import 'vars.css';

@define-mixin backgroundColor $color {
	.foo {
		color: $color;
		@mixin-content;
	}
}

body {
	@mixin backgroundColor #a34532 {
		font-size: 200px;
	}
}

p:not(:first-child):not(.special) {
	color: red;
}

body {
  /* $white comes from the vars.js file thats added as a plugin option */
	/*background-color: $white;*/

	/* $color is imported from vars.css */
	/*background-color: $color;*/
}

@custom-selector :--heading h1, h2, h3, h4, h5, h6;
@custom-media --viewport-small (width <= 500px);

input::placeholder {
	color: red;
}

:--heading {
	@media(--viewport-small) {
		font-size: 40px;
	}
}

:root {
	--max-body-width: 92rem;
}

.foo {
	color: red;

	&:hover {
		color: blue;
	}

	& span {
		color: pink;
	}
/*	:is(span) {
		color: pink;
	}*/
}

/* PostCSS stepped Value Functions */
.test-functions {
	padding: 8px mod(18px, 5px) 1px calc(rem(15px, 6px) + 50%);
	transform: rotate(mod(-140deg, -90deg));
	top: round(15px, 4px);
	right: round(nearest, 15px, 4px);
	bottom: round(up, 15px, 7px);
	left: round(down, 15px, 4px);
	width: round(to-zero, 15px, 4px);
}

@media (prefers-color-scheme: dark) {
	:root {
		--site-bgcolor: $color;
		--site-color: #fff;
	}
}

@media (prefers-color-scheme: light) {
	:root {
		--site-bgcolor: #fff;
		--site-color: #222;
	}
}
$siteBg: var(--site-bgcolor);

body {
	background-color: $siteBg;
}